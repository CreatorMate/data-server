generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model brands {
  id            Int             @id @default(autoincrement())
  name          String          @db.VarChar
  is_premium    String?         @db.VarChar
  customer_id   String?         @db.VarChar
  creator_brand creator_brand[]
  users         users[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model connected_accounts {
  id          Int     @id @default(autoincrement())
  account_id  String  @db.VarChar
  user_id     String? @db.VarChar
  platform_id String? @db.VarChar
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model creators {
  id              String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at      DateTime        @default(now()) @db.Timestamptz(6)
  status          account_status  @default(NEW)
  handle          String?         @db.VarChar
  email           String          @unique @db.VarChar
  based_in        String?         @db.VarChar
  project_types   String?
  date_of_birth   String?         @db.VarChar
  additional_info String?
  tiktok          String?         @db.VarChar
  linked          Boolean         @default(false)
  creator_brand   creator_brand[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model phyllo_connections {
  id         String    @id @db.VarChar
  user_id    String?
  token      String?
  expires_on DateTime? @db.Date
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id        String  @id(map: "Users_pkey") @unique(map: "Users_id_key") @db.VarChar
  email     String  @db.VarChar
  brand_id  Int?
  full_name String? @db.VarChar
  picture   String? @db.VarChar
  brands    brands? @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model creator_brand {
  brand_id   Int
  accepted   Boolean   @default(false)
  id         Int       @id @default(autoincrement())
  creator_id String?   @db.Uuid
  brands     brands    @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  creators   creators? @relation(fields: [creator_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

enum account_status {
  NEW
  INVITED
  IN_REVIEW
  ACCEPTED
}
